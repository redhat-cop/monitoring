---

- name: Ensure that the monitoring config directory exists
  file:
    path: /opt/monitoring
    state: directory

- name: Run the prometheus.yml template
  template:
    src: prometheus.yml.j2
    dest: "/opt/monitoring/prometheus.yml"
    mode: 0765
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: create rules directory
  file:
    path: "/opt/monitoring/rules"
    state: directory
    mode: 0765
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: copy first rules
  copy: 
    src: "first_rules.yml"
    dest: "/opt/monitoring/rules/first_rules.yml"
    mode: 0765
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Enable firewalld
  service:
    name: firewalld
    enabled: yes
    state: started

- name: Open Firewall for DNS
  firewalld:
    port: "{{item}}"
    permanent: yes
    state: enabled
    immediate: yes
  with_items:
    - 9090/tcp

- name: Run Prometheus Docker container
  docker_container:
    name: prometheus
    image: "{{ prometheus_image }}:{{ prometheus_image_version }}"
    restart_policy: unless-stopped
    published_ports:
    - "{{ prometheus_port }}:9090"
    network_mode: host
    volumes:
    - "/opt/monitoring/rules/:/etc/prometheus/rules/:Z"            
    - "/opt/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:Z"
    - "/var/prometheus_targets/:/etc/prometheus/targets/:Z"
    state: "{{ provision_state }}"
    command: |
      --web.enable-lifecycle 
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries 
      --web.console.templates=/usr/share/prometheus/consoles
    restart: yes
