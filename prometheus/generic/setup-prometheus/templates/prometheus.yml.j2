global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
alerting:
 alertmanagers:
   - static_configs:
     - targets:
       # Alertmanager's default port is 9093
       - "127.0.0.1:{{ alertmanager_port }}"

rule_files:
  - "first_rules.yml"

scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']
  - job_name: 'node_exporter'
    scrape_interval: 5s
    static_configs:
{% for host in groups['prometheus_target'] %}
    - targets: ['{{ hostvars[host].ansible_ssh_host }}:9100']
      labels:
        host: '{{ host }}'
        job: 'node'
{% endfor %}

{% if (groups['prometheus_scraper'] |length ) > 1 %}
  - job_name: 'federate-sanity-check'
    scrape_interval: 15s
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job=~"prometheus"}'
    static_configs:
{% for host in groups['prometheus_scraper'] %}
{% if hostvars[host].ansible_host != ansible_host %}
      - targets: ['{{hostvars[host].ansible_host}}:9090']
{% endif %}
{% endfor %}
{% endif %}

{% if datasources is defined %}
  - job_name: 'federate-openshift-environment'
    scrape_interval: 15s
    metrics_path: '/metrics'
    scheme: 'https'
    params:
      'match[]':
        - '{job=~"prometheus"}'
    static_configs:
{% for ocp in datasources %}
{% if ocp.datasource_url.startswith('https://') %}
      - targets: ['{{ ocp.datasource_url[8:] }}']
{% else %}
      - targets: ['{{ ocp.datasource_url }}']
{% endif %}
{% endfor %}
{% endif %}

{% if (groups['prometheus_target_haproxy'] | length ) > 0 %}
  - job_name: 'haproxy_exporter'
    scrape_interval: 5s
    static_configs:
{% for host in groups['prometheus_target_haproxy'] %}
      - targets: ['{{ hostvars[host].ansible_ssh_host }}:{{ haproxy_exporter_port }}']
        labels:
          host: '{{ host }}'
          job: 'haproxy'
{% endfor %}
{% endif %}

{% if (groups['prometheus_target_bind'] | length ) > 0 %}
  - job_name: 'bind_exporter'
    scrape_interval: 5s
    static_configs:
{% for host in groups['prometheus_target_bind'] %}
      - targets: ['{{ hostvars[host].ansible_ssh_host }}:{{ bind_exporter_port }}']
        labels:
          host: '{{ host }}'
          job: 'haproxy'
{% endfor %}
{% endif %}

{% if ssl_certs is defined %}
  - job_name: 'ssl'
    metrics_path: /probe
    scrape_interval: 5s
    static_configs:
      - targets:
{% for cert in ssl_certs %}
          - {{ cert }}
{% endfor %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 127.0.0.1:{{ ssl_exporter_port }}
{% endif %}

